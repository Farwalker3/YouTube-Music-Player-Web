# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Inject YouTube API Key
        run: |
          echo "üîß Injecting YouTube API Key..."
          if [ -z "${{ secrets.YOUTUBE_API_KEY }}" ]; then
            echo "‚ö†Ô∏è Warning: YOUTUBE_API_KEY secret not found. YouTube search will not work."
          else
            echo "‚úÖ YOUTUBE_API_KEY secret found - injecting into script.js"
            API_KEY="${{ secrets.YOUTUBE_API_KEY }}"
            perl -pi -e "s|YOUR_YOUTUBE_API_KEY|\Q$API_KEY\E|g" script.js
            
            if grep -q "YOUR_YOUTUBE_API_KEY" script.js; then
              echo "‚ùå API key injection failed"
              exit 1
            else
              echo "‚úÖ API key successfully injected"
            fi
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4